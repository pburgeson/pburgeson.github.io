<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2020-10-25T22:21:35-04:00</updated><id>/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2020/10/25/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2020-10-25T22:19:33-04:00</published><updated>2020-10-25T22:19:33-04:00</updated><id>/jekyll/update/2020/10/25/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2020/10/25/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Testing Cycloidal Drive Hand Input</title><link href="/archive/2020/08/11/Testing-Cycloidal-Drive-Hand-Input.html" rel="alternate" type="text/html" title="Testing Cycloidal Drive Hand Input" /><published>2020-08-11T00:00:00-04:00</published><updated>2020-08-11T00:00:00-04:00</updated><id>/archive/2020/08/11/Testing-Cycloidal-Drive-Hand-Input</id><content type="html" xml:base="/archive/2020/08/11/Testing-Cycloidal-Drive-Hand-Input.html">&lt;p&gt;The handheld version of this gearbox was 3D printed after addition of some rather generous space to all the mating surfaces.  The extra room was given as I haven’t characterized my 3D printer’s tolerances.  I wanted to validate the motion and opted to accept significant slop in the gear train.  This example is the size I’m expecting the final gearbox to be and it seems to fit inside the NEMA 34 envelope.  I’m concerned about the space that is available for all the bearings that are needed.  I may have to have bearing on 3D printed componenets.  We shall how the design shakes out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/cycloidaldrive/Hand_Turned_Front.jpg&quot; alt=&quot;Asembled PCB&quot; /&gt;
&lt;img src=&quot;../../../assets/cycloidaldrive/Hand_Turned_Rear.jpg&quot; alt=&quot;Asembled PCB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Video of Cycloidal Drive&lt;/p&gt;</content><author><name></name></author><category term="archive" /><summary type="html">The handheld version of this gearbox was 3D printed after addition of some rather generous space to all the mating surfaces. The extra room was given as I haven’t characterized my 3D printer’s tolerances. I wanted to validate the motion and opted to accept significant slop in the gear train. This example is the size I’m expecting the final gearbox to be and it seems to fit inside the NEMA 34 envelope. I’m concerned about the space that is available for all the bearings that are needed. I may have to have bearing on 3D printed componenets. We shall how the design shakes out.</summary></entry><entry><title type="html">Cycloidal Drive Hand Input</title><link href="/archive/2020/08/09/Cycloidal-Drive-Hand-Input.html" rel="alternate" type="text/html" title="Cycloidal Drive Hand Input" /><published>2020-08-09T00:00:00-04:00</published><updated>2020-08-09T00:00:00-04:00</updated><id>/archive/2020/08/09/Cycloidal-Drive-Hand-Input</id><content type="html" xml:base="/archive/2020/08/09/Cycloidal-Drive-Hand-Input.html">&lt;p&gt;After some to work to find a reasonable set of equations to create the cycloidal disc, I was able to find a working set.  It was based off a &lt;a href=&quot;https://www.semanticscholar.org/paper/Determination-of-Real-Clearances-Between-Cycloidal-Kosti%C4%87-Blagojevi%C4%87/5781a00b76689620e057e46ad19a25e0a0c33896&quot;&gt;paper defining and analyzing the clearances in a cycloidal drive&lt;/a&gt;.  While it would probably be worthwhile for me to read and learn the entire paper, I have opted to stop just after the disc definintions.&lt;/p&gt;

&lt;p&gt;Using these equations, I played with the parameters until I found I disc that I could get to fit inside of a NEMA 34 frame.  In this case, that means a base radius of about 30 mm resulting in an overall diameter of about 64 mm.  I tried to maximize the gear ratio, but given the limitation of the precision of a 3D printer, I decided to limit it to 20:1 which will still make a huge difference in the performance of the go kart.  I found a neat little web app that allows you to graph parametric equations.  &lt;a href=&quot;https://www.desmos.com/calculator/xkpccbidkv&quot;&gt;This I used to define the parameters of the cycloidal disc&lt;/a&gt;.  Here, b is the radius of the base circle, a is the radius of the generating circle, c is the eccentricity, and q is the ring gear pin diameter.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;https://a360.co/2CluaLq&quot;&gt;modeled the system in Fusion 360&lt;/a&gt;.  It is meant to only test the tolerance of my 3D printer for this design.  It will be turned by hand rather than by the Teknic motor.  This is a first pass, demonstartion piece.  A future update will cover the construction and testing.  I took wild guess at the tolerances needed for my 3D printer ranging from 0.25 mm to 0.5 mm.  We will see how construction and testing goes.&lt;/p&gt;</content><author><name></name></author><category term="archive" /><summary type="html">After some to work to find a reasonable set of equations to create the cycloidal disc, I was able to find a working set. It was based off a paper defining and analyzing the clearances in a cycloidal drive. While it would probably be worthwhile for me to read and learn the entire paper, I have opted to stop just after the disc definintions.</summary></entry><entry><title type="html">Cable CNC Project Removal</title><link href="/archive/2020/08/08/Cable-CNC-Project-Removal.html" rel="alternate" type="text/html" title="Cable CNC Project Removal" /><published>2020-08-08T00:00:00-04:00</published><updated>2020-08-08T00:00:00-04:00</updated><id>/archive/2020/08/08/Cable-CNC-Project-Removal</id><content type="html" xml:base="/archive/2020/08/08/Cable-CNC-Project-Removal.html">&lt;p&gt;I have opted to remove the Cable CNC project.  I believe that I will get more value out of finding/paying for access to CNC equipment.  While I had hoped to expand it to a 3D system for a garadening robot, I have opted to work on a different project instead.  I want to instead begin work on the mini falcon 9, a project which has interested me for some time.&lt;/p&gt;</content><author><name></name></author><category term="archive" /><summary type="html">I have opted to remove the Cable CNC project. I believe that I will get more value out of finding/paying for access to CNC equipment. While I had hoped to expand it to a 3D system for a garadening robot, I have opted to work on a different project instead. I want to instead begin work on the mini falcon 9, a project which has interested me for some time.</summary></entry><entry><title type="html">Scanner Final Assembly</title><link href="/archive/2020/07/19/Scanner-Final-Assembly.html" rel="alternate" type="text/html" title="Scanner Final Assembly" /><published>2020-07-19T00:00:00-04:00</published><updated>2020-07-19T00:00:00-04:00</updated><id>/archive/2020/07/19/Scanner-Final-Assembly</id><content type="html" xml:base="/archive/2020/07/19/Scanner-Final-Assembly.html">&lt;p&gt;The electronics PCB arrived from Germany this weekend.  There were months of delays due to COVID.  It was time to cease putting off additional progress.  I assembled the PCB which was a quick process as all components were through hole.  I took the risk of not testing more than a visual inspection of the soldered joints.  The components I was connecting were cheap and I have spares so I opted to just turn on power and see if anything was damaged.  After power was connected, nothing let out blue smoke so I forged ahead.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/3dscanner/Scanner_PCB_Assembled.jpg&quot; alt=&quot;Asembled PCB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve decided to change the requirements for the project and use the standard A4988 stepper drivers instead of the Trinamic drivers.  This is a direct effort to complete the project and not let the stepper drivers stand in my way.  As a seperate project, I want to build a A4988 to Trinamic adapter board as their footprints are not the same.  A couple of pins are switched.  I’ll probably just do a simple adapter board.  This will likely require some minor changes to the setup with A4988 either in software or hardware to ensure the microstepping is the same.  Perahps I should opt for some sort of logic circuit to do the microstepping conversion for me.  That might be a sellable product for people that want to upgrade the drivers on their 3D printers.&lt;/p&gt;

&lt;p&gt;Finally, I installed the scanner on a piece of wood to keep in stationary during use.  This provides enough ballast that it won’t tip during scanning.  I may need to do some cable management on the system.  I’m going to see how well this functions for the time being.  Just putting the wiring in loom would make a big difference to the appearance of the system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/3dscanner/Assembled_3D_Scanner.jpg&quot; alt=&quot;Final Scanner Assembly&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I captured a quick timelapse of the system mechanically functioning.  It operates slowly so a timelapse is the only reasonable way to watch it.  This video is doing what would be a scan of a golf ball.  I have not yet set up the bluetooth shutter so I haven’t attempted any scans.  I am quite close and getting steadily more excited.  I have not looked into the lighting or if this scan cycle is the right one for this particular scan.  I’m sure more will be learned as time goes on.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ZOGwxrQpkVQ&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><category term="archive" /><summary type="html">The electronics PCB arrived from Germany this weekend. There were months of delays due to COVID. It was time to cease putting off additional progress. I assembled the PCB which was a quick process as all components were through hole. I took the risk of not testing more than a visual inspection of the soldered joints. The components I was connecting were cheap and I have spares so I opted to just turn on power and see if anything was damaged. After power was connected, nothing let out blue smoke so I forged ahead.</summary></entry><entry><title type="html">Stepper Driver Current Reduction</title><link href="/archive/2020/06/28/Stepper-Driver-Current-Reduction.html" rel="alternate" type="text/html" title="Stepper Driver Current Reduction" /><published>2020-06-28T00:00:00-04:00</published><updated>2020-06-28T00:00:00-04:00</updated><id>/archive/2020/06/28/Stepper-Driver-Current-Reduction</id><content type="html" xml:base="/archive/2020/06/28/Stepper-Driver-Current-Reduction.html">&lt;p&gt;After some additional digging into the Trinamic’s documentation, I found the root of my high current issue.  The original post on Amazon was unhelpful as it just recommended “adding a fan”.  This is an indicator that this is a knockoff board and the vendor has no idea how it works.  Trinamic has a &lt;a href=&quot;https://www.trinamic.com/fileadmin/assets/Support/Appnotes/AN045-How_to_replace_Allegro_A4988_with_TMC2208_01.pdf&quot;&gt;helpful application note&lt;/a&gt; on replacing the Allegro A4988 with this chip, the TMC 2208.  The extra help came because the application note was written around the type of board the TMC 22808 was embedded on.  It gave an explanation of the potiometer on the board.  It adjusts the analog reference voltage for the current measurement.  If this is too far out of adjustment, bad things happen on the board because the 2208 can’t accurately sense the currents running through it.&lt;/p&gt;

&lt;p&gt;I fiddled with the potentiometer and found a point where the current load during a simple static speed test (according to my cheap power supply) dropped by an order of magnitude: 0.5 A down to 0.09 A.  Also interestingly, as I increased voltage, the current dropped which is consistent with my intuition on the relationship of power, voltage, and current.  There is a point where the adjustment has gone too far and not enough current is supplied to drive the motor.&lt;/p&gt;

&lt;p&gt;I also discovered during my testing the arduino board limits the speed of the stepper motor.  Each step is called inside the loop portion of the arduino.  Since arduino is not a fast implementation, it is significantly limited.  I gone to the trouble to measure this speed limit since I don’t own a tactometer.  I could get creative and use a strobe light or try to a fourier transform on the audio or vibration.  Those would be more work than it’s worth since the application does not require any significant speed.&lt;/p&gt;</content><author><name></name></author><category term="archive" /><summary type="html">After some additional digging into the Trinamic’s documentation, I found the root of my high current issue. The original post on Amazon was unhelpful as it just recommended “adding a fan”. This is an indicator that this is a knockoff board and the vendor has no idea how it works. Trinamic has a helpful application note on replacing the Allegro A4988 with this chip, the TMC 2208. The extra help came because the application note was written around the type of board the TMC 22808 was embedded on. It gave an explanation of the potiometer on the board. It adjusts the analog reference voltage for the current measurement. If this is too far out of adjustment, bad things happen on the board because the 2208 can’t accurately sense the currents running through it.</summary></entry><entry><title type="html">Stepper Driver Testing</title><link href="/archive/2020/06/25/Stepper-Driver-Testing.html" rel="alternate" type="text/html" title="Stepper Driver Testing" /><published>2020-06-25T00:00:00-04:00</published><updated>2020-06-25T00:00:00-04:00</updated><id>/archive/2020/06/25/Stepper-Driver-Testing</id><content type="html" xml:base="/archive/2020/06/25/Stepper-Driver-Testing.html">&lt;p&gt;It’s been many years since I drove a stepper motor from an arduino.  In order to get back into the saddle, I made a simple arduino sketch for making a motor rotate.  The goal is to simply have the arduino get a stepper motor to drive using the step and direction pins on a silent step stick with a TMC2208 from trinamic on it.  The trinamic stepper motor drives are a project requirement.&lt;/p&gt;

&lt;p&gt;The sketch can be found in the software folder in my github for the project.  the first sketch was just using arduino delays to manually drive the step pin high and low.  It seemed to work but the motor would randomly stutter.  I started with a 12 V wall wart style power supply.  I connected the step pin to my newly acquired oscilloscope to see if the step or enable pins were stuttering.  They were not.  I thought the issue might be the 12V so I connected the trinamic driver up to my adjustable power supply at 12V.  I found the higher the voltage, the more current the trinamic stepper was sinking.  This caused the stepper driver to heat up which led to a thermal shutdown.  this was the root of the stuttering.  I dont yet understand why this is the case as the trinamic driver is good well above 12V.  I’ll have to dig into the documentation further.  The optiminal seemed around 6 V.  Less and the stepper couldn’t drive at all.  More and extra current was being sunk by the driver.&lt;/p&gt;

&lt;p&gt;Now that the stepper driver was driving the stepper motor, I turned my attention to getting the accelstepper library to drive the motor.  this is critical as the software for the scanner relies on it.  After a few missteps and extra documentation reading I got it working.  The issue I was seeing was that the steps would be coming out of the arduino, but the enable pin was not going active.  The trinamic driver is active low so a simple comfiguration change to the stepper object to invert the logic on the enable pin and everything worked wonderfully.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/3dscanner/stepper_driver_test_1.jpg&quot; alt=&quot;Stepper Driver Testing 1&quot; /&gt;
&lt;img src=&quot;../../../assets/3dscanner/stepper_driver_test_2.jpg&quot; alt=&quot;Stepper Driver Testing 2&quot; /&gt;
&lt;img src=&quot;../../../assets/3dscanner/stepper_driver_test_3.jpg&quot; alt=&quot;Stepper Driver Testing 3&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="archive" /><summary type="html">It’s been many years since I drove a stepper motor from an arduino. In order to get back into the saddle, I made a simple arduino sketch for making a motor rotate. The goal is to simply have the arduino get a stepper motor to drive using the step and direction pins on a silent step stick with a TMC2208 from trinamic on it. The trinamic stepper motor drives are a project requirement.</summary></entry><entry><title type="html">Scanner Asesmbly</title><link href="/archive/2020/06/08/Scanner-Assembly.html" rel="alternate" type="text/html" title="Scanner Asesmbly" /><published>2020-06-08T00:00:00-04:00</published><updated>2020-06-08T00:00:00-04:00</updated><id>/archive/2020/06/08/Scanner-Assembly</id><content type="html" xml:base="/archive/2020/06/08/Scanner-Assembly.html">&lt;p&gt;With all of the 3D printed parts in hand, mechanical assembly went fairly smoothly.  Due to the previously mentioned bulging corners, several corners had to be sanded.  After sanding and removing the melted plastic, the parts fit together fairly well.  Super glue was applied to make the full height stands and to hold together rotating carriage.  Many of the bolt holes had to be opened up with a drill but I was expecting that due to the 3D printing tolerances.&lt;/p&gt;

&lt;p&gt;The biggest hassle was having to reprint the center rotating body.  The holes did not line up with the NEMA 17 stepper motor, even after opening them up with a drill.  Reprinting at a slower speed helped the fit issue but did not solve it.  Several of the screw holes still had to be opened up with a drill.&lt;/p&gt;

&lt;p&gt;A bit of light oil was applied to the bearing surfaces.  It seemed to make a small difference in friction felt when the parts were moved by hand.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/3dscanner/scanner_mechanical_assembly.jpg&quot; alt=&quot;Mechanical Assembly&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried to caputre a time lapse mechanical assembly but it did not go smoothly due to the aforementioned printing issues.  I had to turn off the time lapse during the printing.  Then I didn’t think to turn it back on while assembly was completed.  I will attribute that to being inexperienced in the world of creation on online content.  Since this is not for a youtube channel, I have opted not to go back and redo the time lapse.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/q4OwQgDv-8g&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><category term="archive" /><summary type="html">With all of the 3D printed parts in hand, mechanical assembly went fairly smoothly. Due to the previously mentioned bulging corners, several corners had to be sanded. After sanding and removing the melted plastic, the parts fit together fairly well. Super glue was applied to make the full height stands and to hold together rotating carriage. Many of the bolt holes had to be opened up with a drill but I was expecting that due to the 3D printing tolerances.</summary></entry><entry><title type="html">3D Printing the 3D Scanner</title><link href="/archive/2020/06/04/3D-Printing-the-3D-Scanner.html" rel="alternate" type="text/html" title="3D Printing the 3D Scanner" /><published>2020-06-04T00:00:00-04:00</published><updated>2020-06-04T00:00:00-04:00</updated><id>/archive/2020/06/04/3D-Printing-the-3D-Scanner</id><content type="html" xml:base="/archive/2020/06/04/3D-Printing-the-3D-Scanner.html">&lt;p&gt;This project is really about 3D printing the components, assembling everything, then running and testing the code.  Since I have a 3D Printer, getting the physical parts made seemed like a good first step.  My 3D Printer is the Cetus3D MK3.  It has worked well so far but I haven’t used it very heavily.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/3dscanner/Cetus_3D_Printer.jpg&quot; alt=&quot;Cetus 3D MK3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The files to be printed are available on &lt;a href=&quot;https://www.thingiverse.com/thing:3050437&quot;&gt;thingiverse&lt;/a&gt;.  These parts have clearly been designed to printed without support material and I have to give Thomas the designer credit for that.  Aside from standard 3D printing challenges, the biggest issue was the build volume of my 3D printer.  The stands can be printed on a standard 20x20x20 cm cube but my printer has an 18x18x18 cm build volume.  I opted to split the stand into 2 pieces and glue them back together.  One of the stands is shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/3dscanner/Split_Stand_in_UP_Studio.png&quot; alt=&quot;Split Scanner Stand&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The printing went smoothly.  I may try to start capturing time lapses of these prints just because they are fun to see.  It used probably a total of about 500 g of material.  These were printed in the PLA I had on hand.  My printer is well set up for PLA and I didn’t want to work through tweaking the settings for use of PETG.  The problem that came up was that I was impatient during the printing and set the print speed to “fast”.  The excessive speed created bulging corners shown below.  I’ll have to sand those edges down to get everything to print properly.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/3dscanner/3D_print_corner_bulge.jpg&quot; alt=&quot;3D Printed Corner Bulge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Overall this process went smoothly.  I’m looking forward to get this physically assembled.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/3dscanner/Complete_3D_Printed_Parts.jpg&quot; alt=&quot;Complete Set of 3D Printed Parts&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="archive" /><summary type="html">This project is really about 3D printing the components, assembling everything, then running and testing the code. Since I have a 3D Printer, getting the physical parts made seemed like a good first step. My 3D Printer is the Cetus3D MK3. It has worked well so far but I haven’t used it very heavily.</summary></entry></feed>